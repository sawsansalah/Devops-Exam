# Installation of jenkins with helm 

kubectl create namespace jenkins 

#### Step 1.

kubectl create namespace jenkins 
#### Step 2.
Install Jenkins with Helm
 helm repo add jenkinsci https://charts.jenkins.io
"jenkinsci" has been added to your repositories

$ helm repo update
...Successfully got an update from the "jenkinsci" chart repository


``
#### Step 3.
 helm search repo jenkinscicreate a persistent volume for our Jenkins controller pod. This will prevent us from losing our whole configuration of the Jenkins controller and our jobs 

create a persistent volume for our Jenkins controller pod. This will prevent us from losing our whole configuration of the Jenkins controller and our jobs 

kubectl apply -f jenkins-volume.yaml
sudo chown -R 1000:1000 /data/jenkins-volume

#### Step 4.
Create a service account
kubectl apply -f jenkins-sa.yaml

```
#### Step 5.

Open the jenkins-values.yaml file in your favorite text editor and modify the following:

nodePort: Because we are using minikube we need to use NodePort as service type. Only cloud providers offer load balancers. We define port 32000 as port.

storageClass:

storageClass: jenkins-pv
serviceAccount: the serviceAccount section of the jenkins-values.yaml file should look like this:

serviceAccount:
  create: false
# Service account name is autogenerated by default
name: jenkins
annotations: {}
 ```
#### Step 6.
 chart=jenkinsci/jenkins
$ helm install jenkins -n jenkins -f jenkins-values.yaml $chart

#### Step 7. 

$ jsonpath="{.data.jenkins-admin-password}"
$ secret=$(kubectl get secret -n jenkins jenkins -o jsonpath=$jsonpath)
$ echo $(echo $secret | base64 --decode)

#### step 8
Get the Jenkins URL to visit by running these commands in the same shell:

$ jsonpath="{.spec.ports[0].nodePort}"
$ NODE_PORT=$(kubectl get -n jenkins -o jsonpath=$jsonpath services jenkins)
$ jsonpath="{.items[0].status.addresses[0].address}"
$ NODE_IP=$(kubectl get nodes -n jenkins -o jsonpath=$jsonpath)
$ echo http://$NODE_IP:$NODE_PORT/logi

